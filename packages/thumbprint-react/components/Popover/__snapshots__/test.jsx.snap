// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders content that is passed in 1`] = `
<OnClickOutside(Popover)
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  isOpen={false}
  launcher={[Function]}
  onCloseClick={[Function]}
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  preventDefault={false}
  stopPropagation={false}
>
  <Popover
    container="body"
    disableOnClickOutside={[Function]}
    enableOnClickOutside={[Function]}
    eventTypes={
      Array [
        "mousedown",
        "touchstart",
      ]
    }
    isOpen={false}
    launcher={[Function]}
    onCloseClick={[Function]}
    outsideClickIgnoreClass="ignore-react-onclickoutside"
    position="top"
    preventDefault={false}
    stopPropagation={false}
    wrappedRef={[Function]}
  >
    <Manager>
      <Reference>
        <InnerReference
          getReferenceRef={[Function]}
        />
      </Reference>
      <Portal
        containerInfo={
          <body>
            <div
              class="root"
              style="position: absolute; top: 0px; left: 0px; opacity: 0; pointer-events: none;"
            >
              Goose
              <div
                class="closeButton"
              >
                <button
                  aria-label="Close popover"
                  class="plain plainThemeInherit"
                  type="button"
                >
                  <span
                    class="flexCenter"
                  >
                    <svg
                      class="closeButtonIcon"
                      fill="currentColor"
                      height="14"
                      viewBox="0 0 14 14"
                      width="14"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M3.4346,2.24614 C3.10642,1.91795 2.57432,1.91795 2.24614,2.24614 C1.91795,2.57432 1.91795,3.10642 2.24614,3.4346 L5.8116,7.00006 L2.24627,10.5654 C1.91808,10.8936 1.91808,11.4257 2.24627,11.7539 C2.57445,12.082 3.10655,12.082 3.43473,11.7539 L7.00006,8.18853 L10.5654,11.7539 C10.8936,12.082 11.4257,12.082 11.7539,11.7539 C12.082,11.4257 12.082,10.8936 11.7539,10.5654 L8.18853,7.00006 L11.754,3.4346 C12.0822,3.10642 12.0822,2.57433 11.754,2.24614 C11.4258,1.91795 10.8937,1.91795 10.5655,2.24614 L7.00006,5.8116 L3.4346,2.24614 Z"
                      />
                    </svg>
                  </span>
                </button>
              </div>
              <div
                class="nubbin"
              />
            </div>
          </body>
        }
      >
        <PopoverContent
          isOpen={false}
          onCloseClick={[Function]}
          position="top"
        >
          <Popper
            modifiers={
              Object {
                "offset": Object {
                  "offset": "0, 8px",
                },
                "preventOverflow": Object {
                  "boundariesElement": "window",
                },
              }
            }
            placement="top"
            positionFixed={false}
          >
            <InnerPopper
              eventsEnabled={true}
              modifiers={
                Object {
                  "offset": Object {
                    "offset": "0, 8px",
                  },
                  "preventOverflow": Object {
                    "boundariesElement": "window",
                  },
                }
              }
              placement="top"
              positionFixed={false}
            >
              <div
                className="root"
                style={
                  Object {
                    "left": 0,
                    "opacity": 0,
                    "pointerEvents": "none",
                    "position": "absolute",
                    "top": 0,
                  }
                }
              >
                Goose
                <div
                  className="closeButton"
                >
                  <ForwardRef
                    accessibilityLabel="Close popover"
                    iconLeft={
                      <NavigationCloseTiny
                        className="closeButtonIcon"
                        fill="currentColor"
                        height="14"
                        viewBox="0 0 14 14"
                        width="14"
                        xmlns="http://www.w3.org/2000/svg"
                      />
                    }
                    isDisabled={false}
                    onClick={[Function]}
                    theme="inherit"
                    type="button"
                  >
                    <ForwardRef
                      accessibilityLabel="Close popover"
                      iconLeft={
                        <NavigationCloseTiny
                          className="closeButtonIcon"
                          fill="currentColor"
                          height="14"
                          viewBox="0 0 14 14"
                          width="14"
                          xmlns="http://www.w3.org/2000/svg"
                        />
                      }
                      isDisabled={false}
                      onClick={[Function]}
                      shouldOpenInNewTab={false}
                      theme="inherit"
                      to={null}
                      type="button"
                    >
                      <button
                        aria-label="Close popover"
                        className="plain plainThemeInherit"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <span
                          className="flexCenter"
                        >
                          <NavigationCloseTiny
                            className="closeButtonIcon"
                            fill="currentColor"
                            height="14"
                            viewBox="0 0 14 14"
                            width="14"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <svg
                              className="closeButtonIcon"
                              fill="currentColor"
                              height="14"
                              viewBox="0 0 14 14"
                              width="14"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M3.4346,2.24614 C3.10642,1.91795 2.57432,1.91795 2.24614,2.24614 C1.91795,2.57432 1.91795,3.10642 2.24614,3.4346 L5.8116,7.00006 L2.24627,10.5654 C1.91808,10.8936 1.91808,11.4257 2.24627,11.7539 C2.57445,12.082 3.10655,12.082 3.43473,11.7539 L7.00006,8.18853 L10.5654,11.7539 C10.8936,12.082 11.4257,12.082 11.7539,11.7539 C12.082,11.4257 12.082,10.8936 11.7539,10.5654 L8.18853,7.00006 L11.754,3.4346 C12.0822,3.10642 12.0822,2.57433 11.754,2.24614 C11.4258,1.91795 10.8937,1.91795 10.5655,2.24614 L7.00006,5.8116 L3.4346,2.24614 Z"
                              />
                            </svg>
                          </NavigationCloseTiny>
                        </span>
                      </button>
                    </ForwardRef>
                  </ForwardRef>
                </div>
                <div
                  className="nubbin"
                  style={Object {}}
                />
              </div>
            </InnerPopper>
          </Popper>
        </PopoverContent>
      </Portal>
    </Manager>
  </Popover>
</OnClickOutside(Popover)>
`;
